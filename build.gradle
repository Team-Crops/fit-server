import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI

buildscript {
    ext {
        restdocsApiSpecVersion = '0.19.0'
        jjwtVersion = '0.11.5'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'org.crops'
version = '0.0.1-SNAPSHOT'

swaggerSources {
    fit {
        setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
    }
}

bootJar {
    archivesBaseName = 'app'
    archiveFileName = 'app.jar'
    enabled = true
}

jar { enabled = false }

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2'

    // open feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.3'

    // jwt
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"

    // aws
    implementation 'software.amazon.awssdk:s3:2.21.22'

    // socket io
    implementation 'com.corundumstudio.socketio:netty-socketio:1.7.19'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation "com.epages:restdocs-api-spec:${restdocsApiSpecVersion}"
    swaggerUI 'org.webjars:swagger-ui:5.9.0'

    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

openapi3 {
    setServer('http://localhost:8080')
    setTitle('Crops API')
    setDescription('Crops API Docs')
    setVersion(version)
    setFormat('yaml')
}

tasks.withType(GenerateSwaggerUI).configureEach {
    dependsOn('openapi3')
}

tasks.register('copySwaggerUI', Copy) {
    dependsOn('generateSwaggerUIFit')

    def generatedSwaggerUIFitTask = tasks.named('generateSwaggerUIFit', GenerateSwaggerUI).get()

    from("${generatedSwaggerUIFitTask.outputDir}")
    into(layout.buildDirectory.dir("resources/main/static/docs").get())
}
tasks.named('resolveMainClassName') {
    dependsOn('copySwaggerUI')
}
tasks.withType(Jar).configureEach {
    dependsOn('copySwaggerUI')
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty 'spring.profiles.active', System.getProperty("env", "test")
}

